{"ast":null,"code":"var _jsxFileName = \"/Users/nickscomputer/Desktop/Summer 2024/Revamped Website/personal-website/src/Components/Files/Snake.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './styles.css'; // Assuming your CSS file is imported here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [boardSize, setBoardSize] = useState(21);\n  const [boardDimension, setBoardDimension] = useState(540);\n  const [direction, setDirection] = useState(\"ArrowRight\");\n  const [leadIndex, setLeadIndex] = useState([]);\n  const [appleIndex, setAppleIndex] = useState([]);\n  const [gameStart, setGameStart] = useState(false);\n  const [gameID, setGameID] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [snakes, setSnakes] = useState([]);\n  const [snakeColor, setSnakeColor] = useState(\"white\");\n  const [directionChosen, setDirectionChosen] = useState(false);\n  const gameContainerRef = useRef(null);\n  const scoreBoardRef = useRef(null);\n  const boardSizeSelectorRef = useRef(null);\n  const speedSelectorRef = useRef(null);\n  const playButtonRef = useRef(null);\n  const colorSelectorRef = useRef(null);\n  const colors = [\"white\", \"blue\", \"purple\", \"orange\", \"yellow\", \"brown\", \"green\"];\n  const keyCodes = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\n  const keysOpposites = {\n    \"ArrowUp\": \"ArrowDown\",\n    \"ArrowDown\": \"ArrowUp\",\n    \"ArrowLeft\": \"ArrowRight\",\n    \"ArrowRight\": \"ArrowLeft\"\n  };\n  useEffect(() => {\n    instantiateBoard();\n    instantiateSnake(5);\n    establishColors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Run once on component mount\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (keyCodes.includes(e.code) && keysOpposites[direction] !== e.code && !directionChosen) {\n        setDirection(e.code);\n      }\n      if (!gameStart) {\n        startGame();\n        setGameStart(true);\n      }\n      setDirectionChosen(true);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [direction, directionChosen, gameStart]);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", preventDefaultSpace, false);\n    return () => {\n      window.removeEventListener(\"keydown\", preventDefaultSpace, false);\n    };\n  }, []);\n  const preventDefaultSpace = e => {\n    if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(e.code)) {\n      e.preventDefault();\n    }\n  };\n  const instantiateBoard = () => {\n    const newBoard = [];\n    for (let i = 0; i < boardSize; i++) {\n      const newRow = [];\n      for (let j = 0; j < boardSize; j++) {\n        newRow.push({\n          row: i,\n          col: j,\n          isSnakeBlock: false,\n          isApple: false\n        });\n      }\n      newBoard.push(newRow);\n    }\n    setBoard(newBoard);\n  };\n  const instantiateSnake = numBlocks => {\n    const snakeStart = Math.trunc(boardSize / 2);\n    const newSnakes = [];\n    for (let i = 0; i < numBlocks; i++) {\n      newSnakes.push({\n        row: snakeStart,\n        col: snakeStart - i\n      });\n    }\n    setSnakes(newSnakes);\n    setLeadIndex([snakeStart, snakeStart]);\n  };\n  const establishColors = () => {\n    // Assuming you have refactored this part to manage color selection\n  };\n  const startGame = () => {\n    randomizeApple();\n    const id = window.setInterval(() => {\n      setDirectionChosen(false);\n      moveBlocks();\n    }, Number(speedSelectorRef.current.value));\n    setGameID(id);\n  };\n  const endGame = () => {\n    window.clearInterval(gameID);\n    // Change snake color on end game\n    snakes.forEach(snake => {\n      changeSnakeColor(snake, \"red\");\n    });\n  };\n  const reset = () => {\n    setBoardSize(Number(boardSizeSelectorRef.current.value));\n    instantiateBoard();\n    instantiateSnake(5);\n    setDirection(\"ArrowRight\");\n    setLeadIndex([]);\n    setAppleIndex([]);\n    setGameStart(false);\n    setGameID(\"\");\n    setScore(0);\n    // Reset other state variables as needed\n  };\n  const randomizeApple = () => {\n    let randomRow, randomCol;\n    do {\n      randomRow = Math.trunc(Math.random() * boardSize);\n      randomCol = Math.trunc(Math.random() * boardSize);\n    } while (board[randomRow][randomCol].isSnakeBlock);\n    setAppleIndex([randomRow, randomCol]);\n  };\n  const moveBlocks = () => {\n    let newSnakes = [...snakes];\n    let newLeadIndex = [...leadIndex];\n    if (direction === \"ArrowRight\") {\n      newLeadIndex[1]++;\n    } else if (direction === \"ArrowLeft\") {\n      newLeadIndex[1]--;\n    } else if (direction === \"ArrowUp\") {\n      newLeadIndex[0]--;\n    } else if (direction === \"ArrowDown\") {\n      newLeadIndex[0]++;\n    }\n\n    // Check if game over\n    if (newLeadIndex[0] < 0 || newLeadIndex[0] >= boardSize || newLeadIndex[1] < 0 || newLeadIndex[1] >= boardSize || board[newLeadIndex[0]][newLeadIndex[1]].isSnakeBlock) {\n      endGame();\n      return;\n    }\n\n    // Check if apple eaten\n    if (board[newLeadIndex[0]][newLeadIndex[1]].isApple) {\n      setScore(score + 1);\n      randomizeApple();\n      // Add new block to snake\n      newSnakes = [{\n        row: newLeadIndex[0],\n        col: newLeadIndex[1]\n      }, ...newSnakes];\n    } else {\n      // Move snake forward\n      const lastSnakeBlock = newSnakes.pop();\n      if (lastSnakeBlock) {\n        board[lastSnakeBlock.row][lastSnakeBlock.col].isSnakeBlock = false;\n      }\n      newSnakes = [{\n        row: newLeadIndex[0],\n        col: newLeadIndex[1]\n      }, ...newSnakes];\n    }\n\n    // Update board state\n    setSnakes(newSnakes);\n    setLeadIndex(newLeadIndex);\n    board[newLeadIndex[0]][newLeadIndex[1]].isSnakeBlock = true;\n  };\n  const changeSnakeColor = (snake, color) => {\n    // Assuming you have a mechanism to change snake color in React\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"total-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"score-window\",\n          children: \"Score: 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"board-size\",\n          children: [\" Board:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"board-change\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"11\",\n              children: \"Easy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"21\",\n              selected: true,\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"31\",\n              children: \"Hard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"snake-speed\",\n          children: [\" Speed:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"speed-change\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"250\",\n              children: \"Easy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"125\",\n              selected: true,\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              class: \"s-option\",\n              value: \"75\",\n              children: \"Hard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"play-button\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"game-container\",\n        ref: gameContainerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"colors\",\n        children: \"Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"F65qwDJO6kp5fU7WO0u8BHU7H14=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SnakeGame","_s","board","setBoard","boardSize","setBoardSize","boardDimension","setBoardDimension","direction","setDirection","leadIndex","setLeadIndex","appleIndex","setAppleIndex","gameStart","setGameStart","gameID","setGameID","score","setScore","snakes","setSnakes","snakeColor","setSnakeColor","directionChosen","setDirectionChosen","gameContainerRef","scoreBoardRef","boardSizeSelectorRef","speedSelectorRef","playButtonRef","colorSelectorRef","colors","keyCodes","keysOpposites","instantiateBoard","instantiateSnake","establishColors","handleKeyDown","e","includes","code","startGame","window","addEventListener","removeEventListener","preventDefaultSpace","preventDefault","newBoard","i","newRow","j","push","row","col","isSnakeBlock","isApple","numBlocks","snakeStart","Math","trunc","newSnakes","randomizeApple","id","setInterval","moveBlocks","Number","current","value","endGame","clearInterval","forEach","snake","changeSnakeColor","reset","randomRow","randomCol","random","newLeadIndex","lastSnakeBlock","pop","color","class","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","ref","_c","$RefreshReg$"],"sources":["/Users/nickscomputer/Desktop/Summer 2024/Revamped Website/personal-website/src/Components/Files/Snake.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './styles.css'; // Assuming your CSS file is imported here\n\nconst SnakeGame = () => {\n  const [board, setBoard] = useState([]);\n  const [boardSize, setBoardSize] = useState(21);\n  const [boardDimension, setBoardDimension] = useState(540);\n  const [direction, setDirection] = useState(\"ArrowRight\");\n  const [leadIndex, setLeadIndex] = useState([]);\n  const [appleIndex, setAppleIndex] = useState([]);\n  const [gameStart, setGameStart] = useState(false);\n  const [gameID, setGameID] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [snakes, setSnakes] = useState([]);\n  const [snakeColor, setSnakeColor] = useState(\"white\");\n  const [directionChosen, setDirectionChosen] = useState(false);\n\n  const gameContainerRef = useRef(null);\n  const scoreBoardRef = useRef(null);\n  const boardSizeSelectorRef = useRef(null);\n  const speedSelectorRef = useRef(null);\n  const playButtonRef = useRef(null);\n  const colorSelectorRef = useRef(null);\n\n  const colors = [\"white\", \"blue\", \"purple\", \"orange\", \"yellow\", \"brown\", \"green\"];\n  const keyCodes = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\n  const keysOpposites = {\n    \"ArrowUp\": \"ArrowDown\",\n    \"ArrowDown\": \"ArrowUp\",\n    \"ArrowLeft\": \"ArrowRight\",\n    \"ArrowRight\": \"ArrowLeft\"\n  };\n\n  useEffect(() => {\n    instantiateBoard();\n    instantiateSnake(5);\n    establishColors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Run once on component mount\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (keyCodes.includes(e.code) && keysOpposites[direction] !== e.code && !directionChosen) {\n        setDirection(e.code);\n      }\n      if (!gameStart) {\n        startGame();\n        setGameStart(true);\n      }\n      setDirectionChosen(true);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [direction, directionChosen, gameStart]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", preventDefaultSpace, false);\n    return () => {\n      window.removeEventListener(\"keydown\", preventDefaultSpace, false);\n    };\n  }, []);\n\n  const preventDefaultSpace = (e) => {\n    if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(e.code)) {\n      e.preventDefault();\n    }\n  };\n\n  const instantiateBoard = () => {\n    const newBoard = [];\n    for (let i = 0; i < boardSize; i++) {\n      const newRow = [];\n      for (let j = 0; j < boardSize; j++) {\n        newRow.push({ row: i, col: j, isSnakeBlock: false, isApple: false });\n      }\n      newBoard.push(newRow);\n    }\n    setBoard(newBoard);\n  };\n\n  const instantiateSnake = (numBlocks) => {\n    const snakeStart = Math.trunc(boardSize / 2);\n    const newSnakes = [];\n    for (let i = 0; i < numBlocks; i++) {\n      newSnakes.push({ row: snakeStart, col: snakeStart - i });\n    }\n    setSnakes(newSnakes);\n    setLeadIndex([snakeStart, snakeStart]);\n  };\n\n  const establishColors = () => {\n    // Assuming you have refactored this part to manage color selection\n  };\n\n  const startGame = () => {\n    randomizeApple();\n    const id = window.setInterval(() => {\n      setDirectionChosen(false);\n      moveBlocks();\n    }, Number(speedSelectorRef.current.value));\n    setGameID(id);\n  };\n\n  const endGame = () => {\n    window.clearInterval(gameID);\n    // Change snake color on end game\n    snakes.forEach(snake => {\n      changeSnakeColor(snake, \"red\");\n    });\n  };\n\n  const reset = () => {\n    setBoardSize(Number(boardSizeSelectorRef.current.value));\n    instantiateBoard();\n    instantiateSnake(5);\n    setDirection(\"ArrowRight\");\n    setLeadIndex([]);\n    setAppleIndex([]);\n    setGameStart(false);\n    setGameID(\"\");\n    setScore(0);\n    // Reset other state variables as needed\n  };\n\n  const randomizeApple = () => {\n    let randomRow, randomCol;\n    do {\n      randomRow = Math.trunc(Math.random() * boardSize);\n      randomCol = Math.trunc(Math.random() * boardSize);\n    } while (board[randomRow][randomCol].isSnakeBlock);\n    setAppleIndex([randomRow, randomCol]);\n  };\n\n  const moveBlocks = () => {\n    let newSnakes = [...snakes];\n    let newLeadIndex = [...leadIndex];\n    if (direction === \"ArrowRight\") {\n      newLeadIndex[1]++;\n    } else if (direction === \"ArrowLeft\") {\n      newLeadIndex[1]--;\n    } else if (direction === \"ArrowUp\") {\n      newLeadIndex[0]--;\n    } else if (direction === \"ArrowDown\") {\n      newLeadIndex[0]++;\n    }\n\n    // Check if game over\n    if (newLeadIndex[0] < 0 || newLeadIndex[0] >= boardSize || newLeadIndex[1] < 0 || newLeadIndex[1] >= boardSize || board[newLeadIndex[0]][newLeadIndex[1]].isSnakeBlock) {\n      endGame();\n      return;\n    }\n\n    // Check if apple eaten\n    if (board[newLeadIndex[0]][newLeadIndex[1]].isApple) {\n      setScore(score + 1);\n      randomizeApple();\n      // Add new block to snake\n      newSnakes = [{ row: newLeadIndex[0], col: newLeadIndex[1] }, ...newSnakes];\n    } else {\n      // Move snake forward\n      const lastSnakeBlock = newSnakes.pop();\n      if (lastSnakeBlock) {\n        board[lastSnakeBlock.row][lastSnakeBlock.col].isSnakeBlock = false;\n      }\n      newSnakes = [{ row: newLeadIndex[0], col: newLeadIndex[1] }, ...newSnakes];\n    }\n\n    // Update board state\n    setSnakes(newSnakes);\n    setLeadIndex(newLeadIndex);\n    board[newLeadIndex[0]][newLeadIndex[1]].isSnakeBlock = true;\n  };\n\n  const changeSnakeColor = (snake, color) => {\n    // Assuming you have a mechanism to change snake color in React\n  };\n\n  return (\n    <div class = \"total-container\">\n        <div class = \"row-1\">\n            <div class = \"dashboard\">\n                <div class = \"score-window\">Score: 0</div>\n                <label class = \"board-size\"> Board: \n                    <select class = \"board-change\">\n                        <option class = \"s-option\" value = \"11\">Easy</option>\n                        <option class = \"s-option\" value = \"21\" selected>Normal</option>\n                        <option class = \"s-option\" value = \"31\">Hard</option>\n                    </select>\n                </label>\n                <label class = \"snake-speed\"> Speed: \n                    <select class = \"speed-change\">\n                        <option class = \"s-option\" value = \"250\">Easy</option>\n                        <option class = \"s-option\" value = \"125\" selected>Normal</option>\n                        <option class = \"s-option\" value = \"75\">Hard</option>\n                    </select>\n                </label>\n            </div>\n            <button id = \"play-button\">Play Again</button>\n        </div>\n        <div class = \"row-2\">\n            <div class = \"game-container\" ref={gameContainerRef}></div>\n            <div class = \"colors\">Colors:</div>\n        </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}