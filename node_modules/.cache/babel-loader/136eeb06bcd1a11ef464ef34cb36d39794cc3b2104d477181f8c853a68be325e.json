{"ast":null,"code":"var _jsxFileName = \"/Users/nickscomputer/Desktop/Summer 2024/Revamped Website/personal-website/src/Components/Files/The2048.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ControlBar from '../ControlBar.jsx';\n//import './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = {\n  \"4\": \"#3385FF\",\n  \"8\": \"#3365FF\",\n  \"16\": \"#3345FF\",\n  \"32\": \"#3325FF\",\n  \"64\": \"#3305FF\",\n  \"128\": \"#7a05FF\",\n  \"256\": \"#e00000\",\n  \"512\": \"#a00000\",\n  \"1024\": \"#4c03f4\",\n  \"2048\": \"#b433ff\",\n  \"4096\": \"#000000\"\n};\nconst The2048 = () => {\n  _s();\n  const [grid, setGrid] = useState([]);\n  const [score, setScore] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [moved, setMoved] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [win, setWin] = useState(false);\n  useEffect(() => {\n    buildGrid();\n    placeFirstTiles();\n    const handleKeyDown = e => {\n      if (!gameOver) {\n        clearMerged();\n        if (!checkGameOver()) {\n          moveBlocks(e.code);\n          if (moved) {\n            setMoves(moves + 1);\n            placeNewTile();\n          }\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keydown', preventDefaultForKeys, false);\n    window.addEventListener('click', () => setWin(false));\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keydown', preventDefaultForKeys, false);\n      window.removeEventListener('click', () => setWin(false));\n    };\n  }, [gameOver, moves]);\n  const preventDefaultForKeys = e => {\n    if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n      e.preventDefault();\n    }\n  };\n  const buildGrid = () => {\n    let initialGrid = [];\n    for (let i = 0; i < 4; i++) {\n      initialGrid.push(new Array(4).fill(null));\n    }\n    setGrid(initialGrid);\n  };\n  const placeNewTile = () => {\n    let newRow, newColumn;\n    do {\n      newRow = Math.trunc(Math.random() * 4);\n      newColumn = Math.trunc(Math.random() * 4);\n    } while (grid[newRow][newColumn] !== null);\n    let newTileValue = Math.random() < 0.9 ? 2 : 4;\n    let newGrid = [...grid];\n    newGrid[newRow][newColumn] = newTileValue;\n    setGrid(newGrid);\n  };\n  const placeMergedTile = (row, column, num) => {\n    let newGrid = [...grid];\n    newGrid[row][column] = num;\n    setGrid(newGrid);\n    setScore(score + num);\n    if (num === 2048) {\n      setWin(true);\n    }\n  };\n  const placeFirstTiles = () => {\n    placeNewTile();\n    placeNewTile();\n  };\n  const moveBlock = (block, path, dir) => {\n    let [blockRow, blockColumn] = block;\n    let newGrid = [...grid];\n    if (path === \"horizontal\") {\n      while (blockColumn >= 0 && blockColumn < 4) {\n        const newSpot = newGrid[blockRow][blockColumn + dir];\n        if (newSpot !== null) {\n          if (newSpot === newGrid[blockRow][blockColumn] && !newSpot.merged) {\n            placeMergedTile(blockRow, blockColumn + dir, newGrid[blockRow][blockColumn] * 2);\n          }\n          break;\n        }\n        if (blockColumn + dir < 0 || blockColumn + dir >= 4) break;\n        blockColumn += dir;\n      }\n    } else if (path === \"vertical\") {\n      while (blockRow >= 0 && blockRow < 4) {\n        const newSpot = newGrid[blockRow + dir][blockColumn];\n        if (newSpot !== null) {\n          if (newSpot === newGrid[blockRow][blockColumn] && !newSpot.merged) {\n            placeMergedTile(blockRow + dir, blockColumn, newGrid[blockRow][blockColumn] * 2);\n          }\n          break;\n        }\n        if (blockRow + dir < 0 || blockRow + dir >= 4) break;\n        blockRow += dir;\n      }\n    }\n    if (grid[blockRow][blockColumn] !== newGrid[blockRow][blockColumn]) {\n      setMoved(true);\n    }\n    newGrid[blockRow][blockColumn] = null;\n    newGrid[blockRow][blockColumn] = newGrid[blockRow][blockColumn];\n    setGrid(newGrid);\n  };\n  const moveBlocks = code => {\n    setMoved(false);\n    let tiles = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] !== null) {\n          tiles.push([i, j]);\n        }\n      }\n    }\n    switch (code) {\n      case \"ArrowRight\":\n        tiles.reverse().forEach(tile => moveBlock(tile, \"horizontal\", 1));\n        break;\n      case \"ArrowLeft\":\n        tiles.forEach(tile => moveBlock(tile, \"horizontal\", -1));\n        break;\n      case \"ArrowUp\":\n        tiles.forEach(tile => moveBlock(tile, \"vertical\", -1));\n        break;\n      case \"ArrowDown\":\n        tiles.reverse().forEach(tile => moveBlock(tile, \"vertical\", 1));\n        break;\n      default:\n    }\n  };\n  const clearMerged = () => {\n    let newGrid = grid.map(row => row.map(tile => tile ? {\n      ...tile,\n      merged: false\n    } : null));\n    setGrid(newGrid);\n  };\n  const checkGameOver = () => {\n    let tiles = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] !== null) {\n          tiles.push([i, j, grid[i][j]]);\n        }\n      }\n    }\n    if (tiles.length === 16) {\n      for (let i = 0; i < 16; i++) {\n        if (i % 4 !== 3 && tiles[i][2] === tiles[i + 1][2]) {\n          setGameOver(false);\n          return false;\n        }\n        if (i < 12 && tiles[i][2] === tiles[i + 4][2]) {\n          setGameOver(false);\n          return false;\n        }\n      }\n      setGameOver(true);\n      return true;\n    }\n    return false;\n  };\n  const reset = () => {\n    setGrid([]);\n    setScore(0);\n    setMoves(0);\n    setGameOver(false);\n    setWin(false);\n    buildGrid();\n    placeFirstTiles();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ControlBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-container\",\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        score: score,\n        moves: moves,\n        onReset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameContainer, {\n        grid: grid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), win && /*#__PURE__*/_jsxDEV(WinMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(LoseMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(The2048, \"cd6R/+ndMnX9/7OfXg3k8ppb9mI=\");\n_c = The2048;\nconst Dashboard = ({\n  score,\n  moves,\n  onReset\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"dashboard\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score\",\n    children: [\"Score: \", score]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moves-made\",\n    children: [\"Moves Made: \", moves]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"reset\",\n    onClick: onReset,\n    children: \"Restart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 213,\n  columnNumber: 3\n}, this);\n_c2 = Dashboard;\nconst GameContainer = ({\n  grid\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"game-container\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-block ${cell !== null ? `pos-${rowIndex + 1}-${colIndex + 1}` : ''}`,\n      children: cell !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile\",\n        style: {\n          backgroundColor: colors[cell]\n        },\n        children: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 31\n      }, this)\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 221,\n  columnNumber: 3\n}, this);\n_c3 = GameContainer;\nconst WinMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"win-message\",\n  children: [\"Congratulations!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 21\n  }, this), \"Click to continue\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 235,\n  columnNumber: 3\n}, this);\n_c4 = WinMessage;\nconst LoseMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"lose-message\",\n  children: [\"Game Over!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 15\n  }, this), \"Click \\\"Restart\\\" to play again\"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 241,\n  columnNumber: 3\n}, this);\n_c5 = LoseMessage;\nexport default The2048;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"The2048\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"GameContainer\");\n$RefreshReg$(_c4, \"WinMessage\");\n$RefreshReg$(_c5, \"LoseMessage\");","map":{"version":3,"names":["React","useState","useEffect","ControlBar","jsxDEV","_jsxDEV","colors","The2048","_s","grid","setGrid","score","setScore","moves","setMoves","moved","setMoved","gameOver","setGameOver","win","setWin","buildGrid","placeFirstTiles","handleKeyDown","e","clearMerged","checkGameOver","moveBlocks","code","placeNewTile","window","addEventListener","preventDefaultForKeys","removeEventListener","indexOf","preventDefault","initialGrid","i","push","Array","fill","newRow","newColumn","Math","trunc","random","newTileValue","newGrid","placeMergedTile","row","column","num","moveBlock","block","path","dir","blockRow","blockColumn","newSpot","merged","tiles","j","reverse","forEach","tile","map","length","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Dashboard","onReset","GameContainer","WinMessage","LoseMessage","_c","onClick","_c2","rowIndex","cell","colIndex","style","backgroundColor","_c3","_c4","_c5","$RefreshReg$"],"sources":["/Users/nickscomputer/Desktop/Summer 2024/Revamped Website/personal-website/src/Components/Files/The2048.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ControlBar from '../ControlBar.jsx';\n//import './App.css';\n\nconst colors = {\n  \"4\": \"#3385FF\",\n  \"8\": \"#3365FF\",\n  \"16\": \"#3345FF\",\n  \"32\": \"#3325FF\",\n  \"64\": \"#3305FF\",\n  \"128\": \"#7a05FF\",\n  \"256\": \"#e00000\",\n  \"512\": \"#a00000\",\n  \"1024\": \"#4c03f4\",\n  \"2048\": \"#b433ff\",\n  \"4096\": \"#000000\",\n};\n\nconst The2048 = () => {\n  const [grid, setGrid] = useState([]);\n  const [score, setScore] = useState(0);\n  const [moves, setMoves] = useState(0);\n  const [moved, setMoved] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [win, setWin] = useState(false);\n\n  useEffect(() => {\n    buildGrid();\n    placeFirstTiles();\n    const handleKeyDown = (e) => {\n      if (!gameOver) {\n        clearMerged();\n        if (!checkGameOver()) {\n          moveBlocks(e.code);\n          if (moved) {\n            setMoves(moves + 1);\n            placeNewTile();\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keydown', preventDefaultForKeys, false);\n    window.addEventListener('click', () => setWin(false));\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keydown', preventDefaultForKeys, false);\n      window.removeEventListener('click', () => setWin(false));\n    };\n  }, [gameOver, moves]);\n\n  const preventDefaultForKeys = (e) => {\n    if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n      e.preventDefault();\n    }\n  };\n\n  const buildGrid = () => {\n    let initialGrid = [];\n    for (let i = 0; i < 4; i++) {\n      initialGrid.push(new Array(4).fill(null));\n    }\n    setGrid(initialGrid);\n  };\n\n  const placeNewTile = () => {\n    let newRow, newColumn;\n    do {\n      newRow = Math.trunc(Math.random() * 4);\n      newColumn = Math.trunc(Math.random() * 4);\n    } while (grid[newRow][newColumn] !== null);\n\n    let newTileValue = Math.random() < 0.9 ? 2 : 4;\n    let newGrid = [...grid];\n    newGrid[newRow][newColumn] = newTileValue;\n    setGrid(newGrid);\n  };\n\n  const placeMergedTile = (row, column, num) => {\n    let newGrid = [...grid];\n    newGrid[row][column] = num;\n    setGrid(newGrid);\n    setScore(score + num);\n    if (num === 2048) {\n      setWin(true);\n    }\n  };\n\n  const placeFirstTiles = () => {\n    placeNewTile();\n    placeNewTile();\n  };\n\n  const moveBlock = (block, path, dir) => {\n    let [blockRow, blockColumn] = block;\n    let newGrid = [...grid];\n    if (path === \"horizontal\") {\n      while (blockColumn >= 0 && blockColumn < 4) {\n        const newSpot = newGrid[blockRow][blockColumn + dir];\n        if (newSpot !== null) {\n          if (newSpot === newGrid[blockRow][blockColumn] && !newSpot.merged) {\n            placeMergedTile(blockRow, blockColumn + dir, newGrid[blockRow][blockColumn] * 2);\n          }\n          break;\n        }\n        if (blockColumn + dir < 0 || blockColumn + dir >= 4) break;\n        blockColumn += dir;\n      }\n    } else if (path === \"vertical\") {\n      while (blockRow >= 0 && blockRow < 4) {\n        const newSpot = newGrid[blockRow + dir][blockColumn];\n        if (newSpot !== null) {\n          if (newSpot === newGrid[blockRow][blockColumn] && !newSpot.merged) {\n            placeMergedTile(blockRow + dir, blockColumn, newGrid[blockRow][blockColumn] * 2);\n          }\n          break;\n        }\n        if (blockRow + dir < 0 || blockRow + dir >= 4) break;\n        blockRow += dir;\n      }\n    }\n    if (grid[blockRow][blockColumn] !== newGrid[blockRow][blockColumn]) {\n      setMoved(true);\n    }\n    newGrid[blockRow][blockColumn] = null;\n    newGrid[blockRow][blockColumn] = newGrid[blockRow][blockColumn];\n    setGrid(newGrid);\n  };\n\n  const moveBlocks = (code) => {\n    setMoved(false);\n    let tiles = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] !== null) {\n          tiles.push([i, j]);\n        }\n      }\n    }\n    switch (code) {\n      case \"ArrowRight\":\n        tiles.reverse().forEach((tile) => moveBlock(tile, \"horizontal\", 1));\n        break;\n      case \"ArrowLeft\":\n        tiles.forEach((tile) => moveBlock(tile, \"horizontal\", -1));\n        break;\n      case \"ArrowUp\":\n        tiles.forEach((tile) => moveBlock(tile, \"vertical\", -1));\n        break;\n      case \"ArrowDown\":\n        tiles.reverse().forEach((tile) => moveBlock(tile, \"vertical\", 1));\n        break;\n      default:\n    }\n  };\n\n  const clearMerged = () => {\n    let newGrid = grid.map(row => row.map(tile => tile ? { ...tile, merged: false } : null));\n    setGrid(newGrid);\n  };\n\n  const checkGameOver = () => {\n    let tiles = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] !== null) {\n          tiles.push([i, j, grid[i][j]]);\n        }\n      }\n    }\n    if (tiles.length === 16) {\n      for (let i = 0; i < 16; i++) {\n        if (i % 4 !== 3 && tiles[i][2] === tiles[i + 1][2]) {\n          setGameOver(false);\n          return false;\n        }\n        if (i < 12 && tiles[i][2] === tiles[i + 4][2]) {\n          setGameOver(false);\n          return false;\n        }\n      }\n      setGameOver(true);\n      return true;\n    }\n    return false;\n  };\n\n  const reset = () => {\n    setGrid([]);\n    setScore(0);\n    setMoves(0);\n    setGameOver(false);\n    setWin(false);\n    buildGrid();\n    placeFirstTiles();\n  };\n\n  return (\n    <div>\n        <ControlBar />\n        <div className=\"overflow-container\">\n        <Dashboard score={score} moves={moves} onReset={reset} />\n        <GameContainer grid={grid} />\n        {win && <WinMessage />}\n        {gameOver && <LoseMessage />}\n        </div>\n    </div>\n  );\n};\n\nconst Dashboard = ({ score, moves, onReset }) => (\n  <div className=\"dashboard\">\n    <div className=\"score\">Score: {score}</div>\n    <div className=\"moves-made\">Moves Made: {moves}</div>\n    <button className=\"reset\" onClick={onReset}>Restart</button>\n  </div>\n);\n\nconst GameContainer = ({ grid }) => (\n  <div className=\"game-container\">\n    <div className=\"grid\">\n      {grid.map((row, rowIndex) =>\n        row.map((cell, colIndex) => (\n          <div key={`${rowIndex}-${colIndex}`} className={`grid-block ${cell !== null ? `pos-${rowIndex + 1}-${colIndex + 1}` : ''}`}>\n            {cell !== null && <div className=\"tile\" style={{ backgroundColor: colors[cell] }}>{cell}</div>}\n          </div>\n        ))\n      )}\n    </div>\n  </div>\n);\n\nconst WinMessage = () => (\n  <div className=\"win-message\">\n    Congratulations!<br />Click to continue\n  </div>\n);\n\nconst LoseMessage = () => (\n  <div className=\"lose-message\">\n    Game Over!<br />Click \"Restart\" to play again\n  </div>\n);\n\nexport default The2048;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAG;EACb,GAAG,EAAE,SAAS;EACd,GAAG,EAAE,SAAS;EACd,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,SAAS;EACf,IAAI,EAAE,SAAS;EACf,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,KAAK,EAAE,SAAS;EAChB,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE,SAAS;EACjB,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdmB,SAAS,CAAC,CAAC;IACXC,eAAe,CAAC,CAAC;IACjB,MAAMC,aAAa,GAAIC,CAAC,IAAK;MAC3B,IAAI,CAACP,QAAQ,EAAE;QACbQ,WAAW,CAAC,CAAC;QACb,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;UACpBC,UAAU,CAACH,CAAC,CAACI,IAAI,CAAC;UAClB,IAAIb,KAAK,EAAE;YACTD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;YACnBgB,YAAY,CAAC,CAAC;UAChB;QACF;MACF;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,aAAa,CAAC;IACjDO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEC,qBAAqB,EAAE,KAAK,CAAC;IAChEF,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAMX,MAAM,CAAC,KAAK,CAAC,CAAC;IACrD,OAAO,MAAM;MACXU,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;MACpDO,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAED,qBAAqB,EAAE,KAAK,CAAC;MACnEF,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAE,MAAMb,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACH,QAAQ,EAAEJ,KAAK,CAAC,CAAC;EAErB,MAAMmB,qBAAqB,GAAIR,CAAC,IAAK;IACnC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAACU,OAAO,CAACV,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;MACrFJ,CAAC,CAACW,cAAc,CAAC,CAAC;IACpB;EACF,CAAC;EAED,MAAMd,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIe,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,WAAW,CAACE,IAAI,CAAC,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C;IACA9B,OAAO,CAAC0B,WAAW,CAAC;EACtB,CAAC;EAED,MAAMP,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIY,MAAM,EAAEC,SAAS;IACrB,GAAG;MACDD,MAAM,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MACtCH,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC,QAAQpC,IAAI,CAACgC,MAAM,CAAC,CAACC,SAAS,CAAC,KAAK,IAAI;IAEzC,IAAII,YAAY,GAAGH,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IAC9C,IAAIE,OAAO,GAAG,CAAC,GAAGtC,IAAI,CAAC;IACvBsC,OAAO,CAACN,MAAM,CAAC,CAACC,SAAS,CAAC,GAAGI,YAAY;IACzCpC,OAAO,CAACqC,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,GAAG,KAAK;IAC5C,IAAIJ,OAAO,GAAG,CAAC,GAAGtC,IAAI,CAAC;IACvBsC,OAAO,CAACE,GAAG,CAAC,CAACC,MAAM,CAAC,GAAGC,GAAG;IAC1BzC,OAAO,CAACqC,OAAO,CAAC;IAChBnC,QAAQ,CAACD,KAAK,GAAGwC,GAAG,CAAC;IACrB,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChB/B,MAAM,CAAC,IAAI,CAAC;IACd;EACF,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BO,YAAY,CAAC,CAAC;IACdA,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMuB,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,GAAG,KAAK;IACtC,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,KAAK;IACnC,IAAIN,OAAO,GAAG,CAAC,GAAGtC,IAAI,CAAC;IACvB,IAAI6C,IAAI,KAAK,YAAY,EAAE;MACzB,OAAOG,WAAW,IAAI,CAAC,IAAIA,WAAW,GAAG,CAAC,EAAE;QAC1C,MAAMC,OAAO,GAAGX,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,GAAGF,GAAG,CAAC;QACpD,IAAIG,OAAO,KAAK,IAAI,EAAE;UACpB,IAAIA,OAAO,KAAKX,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,IAAI,CAACC,OAAO,CAACC,MAAM,EAAE;YACjEX,eAAe,CAACQ,QAAQ,EAAEC,WAAW,GAAGF,GAAG,EAAER,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAG,CAAC,CAAC;UAClF;UACA;QACF;QACA,IAAIA,WAAW,GAAGF,GAAG,GAAG,CAAC,IAAIE,WAAW,GAAGF,GAAG,IAAI,CAAC,EAAE;QACrDE,WAAW,IAAIF,GAAG;MACpB;IACF,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC9B,OAAOE,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE;QACpC,MAAME,OAAO,GAAGX,OAAO,CAACS,QAAQ,GAAGD,GAAG,CAAC,CAACE,WAAW,CAAC;QACpD,IAAIC,OAAO,KAAK,IAAI,EAAE;UACpB,IAAIA,OAAO,KAAKX,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,IAAI,CAACC,OAAO,CAACC,MAAM,EAAE;YACjEX,eAAe,CAACQ,QAAQ,GAAGD,GAAG,EAAEE,WAAW,EAAEV,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAG,CAAC,CAAC;UAClF;UACA;QACF;QACA,IAAID,QAAQ,GAAGD,GAAG,GAAG,CAAC,IAAIC,QAAQ,GAAGD,GAAG,IAAI,CAAC,EAAE;QAC/CC,QAAQ,IAAID,GAAG;MACjB;IACF;IACA,IAAI9C,IAAI,CAAC+C,QAAQ,CAAC,CAACC,WAAW,CAAC,KAAKV,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,EAAE;MAClEzC,QAAQ,CAAC,IAAI,CAAC;IAChB;IACA+B,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAG,IAAI;IACrCV,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAGV,OAAO,CAACS,QAAQ,CAAC,CAACC,WAAW,CAAC;IAC/D/C,OAAO,CAACqC,OAAO,CAAC;EAClB,CAAC;EAED,MAAMpB,UAAU,GAAIC,IAAI,IAAK;IAC3BZ,QAAQ,CAAC,KAAK,CAAC;IACf,IAAI4C,KAAK,GAAG,EAAE;IACd,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,KAAK,IAAIwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAIpD,IAAI,CAAC4B,CAAC,CAAC,CAACwB,CAAC,CAAC,KAAK,IAAI,EAAE;UACvBD,KAAK,CAACtB,IAAI,CAAC,CAACD,CAAC,EAAEwB,CAAC,CAAC,CAAC;QACpB;MACF;IACF;IACA,QAAQjC,IAAI;MACV,KAAK,YAAY;QACfgC,KAAK,CAACE,OAAO,CAAC,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAKZ,SAAS,CAACY,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QACnE;MACF,KAAK,WAAW;QACdJ,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAKZ,SAAS,CAACY,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D;MACF,KAAK,SAAS;QACZJ,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAKZ,SAAS,CAACY,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD;MACF,KAAK,WAAW;QACdJ,KAAK,CAACE,OAAO,CAAC,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAKZ,SAAS,CAACY,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;QACjE;MACF;IACF;EACF,CAAC;EAED,MAAMvC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIsB,OAAO,GAAGtC,IAAI,CAACwD,GAAG,CAAChB,GAAG,IAAIA,GAAG,CAACgB,GAAG,CAACD,IAAI,IAAIA,IAAI,GAAG;MAAE,GAAGA,IAAI;MAAEL,MAAM,EAAE;IAAM,CAAC,GAAG,IAAI,CAAC,CAAC;IACxFjD,OAAO,CAACqC,OAAO,CAAC;EAClB,CAAC;EAED,MAAMrB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIkC,KAAK,GAAG,EAAE;IACd,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,KAAK,IAAIwB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAIpD,IAAI,CAAC4B,CAAC,CAAC,CAACwB,CAAC,CAAC,KAAK,IAAI,EAAE;UACvBD,KAAK,CAACtB,IAAI,CAAC,CAACD,CAAC,EAAEwB,CAAC,EAAEpD,IAAI,CAAC4B,CAAC,CAAC,CAACwB,CAAC,CAAC,CAAC,CAAC;QAChC;MACF;IACF;IACA,IAAID,KAAK,CAACM,MAAM,KAAK,EAAE,EAAE;MACvB,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,IAAIuB,KAAK,CAACvB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKuB,KAAK,CAACvB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAClDnB,WAAW,CAAC,KAAK,CAAC;UAClB,OAAO,KAAK;QACd;QACA,IAAImB,CAAC,GAAG,EAAE,IAAIuB,KAAK,CAACvB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKuB,KAAK,CAACvB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAC7CnB,WAAW,CAAC,KAAK,CAAC;UAClB,OAAO,KAAK;QACd;MACF;MACAA,WAAW,CAAC,IAAI,CAAC;MACjB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMiD,KAAK,GAAGA,CAAA,KAAM;IAClBzD,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXE,QAAQ,CAAC,CAAC,CAAC;IACXI,WAAW,CAAC,KAAK,CAAC;IAClBE,MAAM,CAAC,KAAK,CAAC;IACbC,SAAS,CAAC,CAAC;IACXC,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,oBACEjB,OAAA;IAAA+D,QAAA,gBACI/D,OAAA,CAACF,UAAU;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdnE,OAAA;MAAKoE,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACnC/D,OAAA,CAACqE,SAAS;QAAC/D,KAAK,EAAEA,KAAM;QAACE,KAAK,EAAEA,KAAM;QAAC8D,OAAO,EAAER;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDnE,OAAA,CAACuE,aAAa;QAACnE,IAAI,EAAEA;MAAK;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5BrD,GAAG,iBAAId,OAAA,CAACwE,UAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrBvD,QAAQ,iBAAIZ,OAAA,CAACyE,WAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAChE,EAAA,CA/LID,OAAO;AAAAwE,EAAA,GAAPxE,OAAO;AAiMb,MAAMmE,SAAS,GAAGA,CAAC;EAAE/D,KAAK;EAAEE,KAAK;EAAE8D;AAAQ,CAAC,kBAC1CtE,OAAA;EAAKoE,SAAS,EAAC,WAAW;EAAAL,QAAA,gBACxB/D,OAAA;IAAKoE,SAAS,EAAC,OAAO;IAAAL,QAAA,GAAC,SAAO,EAACzD,KAAK;EAAA;IAAA0D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eAC3CnE,OAAA;IAAKoE,SAAS,EAAC,YAAY;IAAAL,QAAA,GAAC,cAAY,EAACvD,KAAK;EAAA;IAAAwD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,eACrDnE,OAAA;IAAQoE,SAAS,EAAC,OAAO;IAACO,OAAO,EAAEL,OAAQ;IAAAP,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACzD,CACN;AAACS,GAAA,GANIP,SAAS;AAQf,MAAME,aAAa,GAAGA,CAAC;EAAEnE;AAAK,CAAC,kBAC7BJ,OAAA;EAAKoE,SAAS,EAAC,gBAAgB;EAAAL,QAAA,eAC7B/D,OAAA;IAAKoE,SAAS,EAAC,MAAM;IAAAL,QAAA,EAClB3D,IAAI,CAACwD,GAAG,CAAC,CAAChB,GAAG,EAAEiC,QAAQ,KACtBjC,GAAG,CAACgB,GAAG,CAAC,CAACkB,IAAI,EAAEC,QAAQ,kBACrB/E,OAAA;MAAqCoE,SAAS,EAAE,cAAcU,IAAI,KAAK,IAAI,GAAG,OAAOD,QAAQ,GAAG,CAAC,IAAIE,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,EAAG;MAAAhB,QAAA,EACxHe,IAAI,KAAK,IAAI,iBAAI9E,OAAA;QAAKoE,SAAS,EAAC,MAAM;QAACY,KAAK,EAAE;UAAEC,eAAe,EAAEhF,MAAM,CAAC6E,IAAI;QAAE,CAAE;QAAAf,QAAA,EAAEe;MAAI;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GADtF,GAAGU,QAAQ,IAAIE,QAAQ,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CACN,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACe,GAAA,GAZIX,aAAa;AAcnB,MAAMC,UAAU,GAAGA,CAAA,kBACjBxE,OAAA;EAAKoE,SAAS,EAAC,aAAa;EAAAL,QAAA,GAAC,kBACX,eAAA/D,OAAA;IAAAgE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,qBACxB;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CACN;AAACgB,GAAA,GAJIX,UAAU;AAMhB,MAAMC,WAAW,GAAGA,CAAA,kBAClBzE,OAAA;EAAKoE,SAAS,EAAC,cAAc;EAAAL,QAAA,GAAC,YAClB,eAAA/D,OAAA;IAAAgE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,mCAClB;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CACN;AAACiB,GAAA,GAJIX,WAAW;AAMjB,eAAevE,OAAO;AAAC,IAAAwE,EAAA,EAAAE,GAAA,EAAAM,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAT,GAAA;AAAAS,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}