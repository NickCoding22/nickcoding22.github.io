{"ast":null,"code":"let moved = false;\nlet score = 0;\nlet moves = 0;\nlet gameOver = false;\nconst colors = {\n  \"4\": \"#3385FF\",\n  \"8\": \"#3365FF\",\n  \"16\": \"#3345FF\",\n  \"32\": \"#3325FF\",\n  \"64\": \"#3305FF\",\n  \"128\": \"#7a05FF\",\n  \"256\": \"#e00000\",\n  \"512\": \"#a00000\",\n  \"1024\": \"#4c03f4\",\n  \"2048\": \"#b433ff\",\n  \"4096\": \"#black\"\n};\nconst grid = document.querySelector('.grid');\nconst tileContainer = document.querySelector('.tile-container');\nconst winMessage = document.querySelector('.win-message');\nconst loseMessage = document.querySelector('.lose-message');\nconst scoreBoard = document.querySelector('.score');\nconst moveBoard = document.querySelector('.moves-made');\nconst resetButton = document.querySelector('.reset');\nfunction buildGrid() {\n  for (let i = 0; i < 4; i++) {\n    const newRow = document.createElement('div');\n    newRow.classList.add('grid-row');\n    for (let j = 0; j < 4; j++) {\n      const newGridBlock = document.createElement('div');\n      newGridBlock.classList.add('grid-block');\n      newRow.appendChild(newGridBlock);\n    }\n    grid.appendChild(newRow);\n  }\n}\nfunction placeNewTile() {\n  let newRow, newColumn;\n  do {\n    newRow = Math.trunc(Math.random() * 4) + 1;\n    newColumn = Math.trunc(Math.random() * 4) + 1;\n  } while (document.querySelectorAll(`.pos-${newRow}-${newColumn}`).length > 0);\n  const newTile = document.createElement('div');\n  newTile.classList.add('tile');\n  newTile.classList.add(`pos-${newRow}-${newColumn}`);\n  const newInnerTile = document.createElement('div');\n  newInnerTile.classList.add('inner-tile');\n  newInnerTile.textContent = Math.random() < 0.9 ? 2 : 4;\n  newInnerTile.style.animationName = \"tile-grow\";\n  if (newInnerTile.textContent == 4) {\n    newInnerTile.style.backgroundColor = colors[\"4\"];\n  }\n  newTile.appendChild(newInnerTile);\n  tileContainer.appendChild(newTile);\n}\nfunction placeMergedTile(row, column, num) {\n  const newTile = document.createElement('div');\n  newTile.classList.add('tile');\n  newTile.classList.add(`pos-${row}-${column}`);\n  const newInnerTile = document.createElement('div');\n  newInnerTile.classList.add('inner-tile');\n  newInnerTile.textContent = num;\n  newInnerTile.style.animationName = \"tile-pop\";\n  newInnerTile.style.backgroundColor = colors[\"\" + num];\n  score += num;\n  scoreBoard.textContent = `Score: ${score}`;\n  if (num == 2048) {\n    winMessage.classList.add('fade-in-animation');\n  }\n  newTile.appendChild(newInnerTile);\n  tileContainer.appendChild(newTile);\n}\nfunction placeFirstTiles() {\n  placeNewTile();\n  placeNewTile();\n}\nfunction moveBlock(block, path, dir) {\n  const blockPos = block.classList[1];\n  let blockRow = Number(blockPos.split('-')[1]);\n  let blockColumn = Number(blockPos.split('-')[2]);\n  if (path == \"horizontial\") {\n    while (blockColumn >= 1 && blockColumn <= 4) {\n      const newSpot = `.pos-${blockRow}-${blockColumn + dir}`;\n      if (document.querySelectorAll(newSpot).length > 0) {\n        if (document.querySelector(newSpot).textContent === block.textContent && !document.querySelector(newSpot).classList.contains('merged')) {\n          document.querySelector(newSpot).classList.add('merged');\n          block.classList.add('merged');\n          blockColumn += dir;\n          placeMergedTile(blockRow, blockColumn, Number(block.textContent) * 2);\n        }\n        break;\n      }\n      if (blockColumn + dir < 1 || blockColumn + dir > 4) {\n        break;\n      }\n      blockColumn += dir;\n    }\n  } else if (path == \"vertical\") {\n    while (blockRow >= 1 && blockRow <= 4) {\n      const newSpot = `.pos-${blockRow + dir}-${blockColumn}`;\n      if (document.querySelectorAll(newSpot).length > 0) {\n        if (document.querySelector(newSpot).textContent === block.textContent && !document.querySelector(newSpot).classList.contains('merged')) {\n          document.querySelector(newSpot).classList.add('merged');\n          block.classList.add('merged');\n          blockRow += dir;\n          placeMergedTile(blockRow, blockColumn, Number(block.textContent) * 2);\n        }\n        break;\n      }\n      if (blockRow + dir < 1 || blockRow + dir > 4) {\n        break;\n      }\n      blockRow += dir;\n    }\n  }\n  const newPosition = `pos-${blockRow}-${blockColumn}`;\n  if (blockPos != newPosition) {\n    moved = true;\n  }\n  block.classList.remove(blockPos);\n  block.classList.add(newPosition);\n}\nfunction moveBlocks(code) {\n  moved = false;\n  let tiles = document.querySelectorAll('.tile');\n  tiles = Array.from(tiles);\n  tiles = tiles.sort((a, b) => {\n    return a.classList[1] > b.classList[1] ? 1 : -1;\n  });\n  switch (code) {\n    case \"ArrowRight\":\n      //console.log(\"right\");\n      tiles.reverse().forEach(tile => {\n        moveBlock(tile, \"horizontial\", 1);\n      });\n      break;\n    case \"ArrowLeft\":\n      //console.log(\"left\");\n      tiles.forEach(tile => {\n        moveBlock(tile, \"horizontial\", -1);\n      });\n      break;\n    case \"ArrowUp\":\n      //console.log(\"up\");\n      tiles.forEach(tile => {\n        moveBlock(tile, \"vertical\", -1);\n      });\n      break;\n    case \"ArrowDown\":\n      //console.log(\"down\");\n      tiles.reverse().forEach(tile => {\n        moveBlock(tile, \"vertical\", 1);\n      });\n      break;\n    default:\n    //console.log(\"Not an option lol.\");\n  }\n}\nfunction clearMerged() {\n  const merged = document.querySelectorAll('.merged');\n  merged.forEach(m => tileContainer.removeChild(m));\n}\nfunction checkGameOver() {\n  let tiles = document.querySelectorAll('.tile');\n  tiles = Array.from(tiles);\n  tiles = tiles.sort((a, b) => {\n    return a.classList[1] > b.classList[1] ? 1 : -1;\n  });\n  if (tiles.length == 16) {\n    for (let i = 0; i <= 12; i += 4) {\n      for (let j = 0; j <= 2; j++) {\n        if (tiles[j + i].firstChild.textContent == tiles[j + i + 1].firstChild.textContent) {\n          gameOver = false;\n          return false;\n        }\n      }\n    }\n    for (let i = 0; i <= 8; i += 4) {\n      for (let j = 0; j <= 3; j++) {\n        if (tiles[j + i].firstChild.textContent == tiles[j + i + 4].firstChild.textContent) {\n          gameOver = false;\n          return false;\n        }\n      }\n    }\n    loseMessage.classList.add('fade-in-animation');\n    return true;\n  }\n  return false;\n}\nfunction reset() {\n  const tiles = document.querySelectorAll('.tile');\n  tiles.forEach(tile => {\n    tileContainer.removeChild(tile);\n  });\n  score = 0;\n  moves = 0;\n  gameOver = false;\n  scoreBoard.textContent = `Score: 0`;\n  moveBoard.textContent = `Moves Made: 0`;\n  const messages = document.querySelectorAll('.fade-in-animation');\n  if (messages.length > 0) {\n    messages.forEach(message => message.classList.remove('fade-in-animation'));\n  }\n  placeFirstTiles();\n}\nwindow.addEventListener('keydown', e => {\n  if (!gameOver) {\n    clearMerged();\n    if (!checkGameOver()) {\n      moveBlocks(e.code);\n      if (moved) {\n        moves += 1;\n        moveBoard.textContent = `Moves Made: ${moves}`;\n        placeNewTile();\n      }\n    }\n  }\n});\nwindow.addEventListener(\"keydown\", function (e) {\n  if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n    e.preventDefault();\n  }\n}, false);\nwindow.addEventListener('click', () => {\n  winMessage.classList.remove('fade-in-animation');\n});\nresetButton.addEventListener('click', reset);\nbuildGrid();\nplaceFirstTiles();","map":{"version":3,"names":["moved","score","moves","gameOver","colors","grid","document","querySelector","tileContainer","winMessage","loseMessage","scoreBoard","moveBoard","resetButton","buildGrid","i","newRow","createElement","classList","add","j","newGridBlock","appendChild","placeNewTile","newColumn","Math","trunc","random","querySelectorAll","length","newTile","newInnerTile","textContent","style","animationName","backgroundColor","placeMergedTile","row","column","num","placeFirstTiles","moveBlock","block","path","dir","blockPos","blockRow","Number","split","blockColumn","newSpot","contains","newPosition","remove","moveBlocks","code","tiles","Array","from","sort","a","b","reverse","forEach","tile","clearMerged","merged","m","removeChild","checkGameOver","firstChild","reset","messages","message","window","addEventListener","e","indexOf","preventDefault"],"sources":["/Users/nickscomputer/Desktop/Summer 2024/Revamped Website/personal-website/src/Components/Files/2048/2048.js"],"sourcesContent":["let moved = false;\nlet score = 0;\nlet moves = 0;\nlet gameOver = false;\nconst colors = {\n    \"4\": \"#3385FF\",\n    \"8\": \"#3365FF\",\n    \"16\": \"#3345FF\",\n    \"32\": \"#3325FF\",\n    \"64\": \"#3305FF\",\n    \"128\": \"#7a05FF\",\n    \"256\": \"#e00000\",\n    \"512\": \"#a00000\",\n    \"1024\": \"#4c03f4\",\n    \"2048\": \"#b433ff\",\n    \"4096\": \"#black\",\n}\nconst grid = document.querySelector('.grid');\nconst tileContainer = document.querySelector('.tile-container');\nconst winMessage = document.querySelector('.win-message');\nconst loseMessage = document.querySelector('.lose-message');\nconst scoreBoard = document.querySelector('.score');\nconst moveBoard = document.querySelector('.moves-made');\nconst resetButton = document.querySelector('.reset');\n\nfunction buildGrid() {\n    for (let i = 0; i < 4; i++) {\n        const newRow = document.createElement('div');\n        newRow.classList.add('grid-row');\n        for (let j = 0; j < 4; j++) {\n            const newGridBlock = document.createElement('div');\n            newGridBlock.classList.add('grid-block');\n            newRow.appendChild(newGridBlock);\n        }\n        grid.appendChild(newRow);\n    }\n}\n\nfunction placeNewTile() {\n    let newRow, newColumn;\n    do {\n        newRow = Math.trunc(Math.random() * 4) + 1;\n        newColumn = Math.trunc(Math.random() * 4) + 1;\n    } while (document.querySelectorAll(`.pos-${newRow}-${newColumn}`).length > 0)\n\n    const newTile = document.createElement('div');\n    newTile.classList.add('tile');\n    newTile.classList.add(`pos-${newRow}-${newColumn}`);\n\n    const newInnerTile = document.createElement('div');\n    newInnerTile.classList.add('inner-tile');\n    newInnerTile.textContent = Math.random() < 0.9 ? 2 : 4;\n    newInnerTile.style.animationName = \"tile-grow\";\n\n    if (newInnerTile.textContent == 4) { newInnerTile.style.backgroundColor = colors[\"4\"]; }\n\n    newTile.appendChild(newInnerTile);\n    tileContainer.appendChild(newTile);\n}\n\nfunction placeMergedTile(row, column, num) {\n    const newTile = document.createElement('div');\n    newTile.classList.add('tile'); \n    newTile.classList.add(`pos-${row}-${column}`);\n\n    const newInnerTile = document.createElement('div');\n    newInnerTile.classList.add('inner-tile');\n    newInnerTile.textContent = num;\n    newInnerTile.style.animationName = \"tile-pop\";\n    \n    newInnerTile.style.backgroundColor = colors[\"\" + num];\n    score += num;\n    scoreBoard.textContent = `Score: ${score}`;\n    if (num == 2048) {\n        winMessage.classList.add('fade-in-animation');\n    }\n\n    newTile.appendChild(newInnerTile);\n    tileContainer.appendChild(newTile);\n}\n\nfunction placeFirstTiles() {\n    placeNewTile(); placeNewTile();\n}\n\nfunction moveBlock(block, path, dir) {\n    const blockPos = block.classList[1];\n    let blockRow = Number(blockPos.split('-')[1]);\n    let blockColumn = Number(blockPos.split('-')[2]);\n    if (path == \"horizontial\") {\n        while (blockColumn >= 1 && blockColumn <= 4) {\n            const newSpot = `.pos-${blockRow}-${blockColumn + dir}`;\n            if (document.querySelectorAll(newSpot).length > 0) {\n                if (document.querySelector(newSpot).textContent === block.textContent &&\n                    !document.querySelector(newSpot).classList.contains('merged')) {\n                    document.querySelector(newSpot).classList.add('merged');\n                    block.classList.add('merged');\n                    blockColumn += dir;\n                    placeMergedTile(blockRow, blockColumn, Number(block.textContent) * 2);\n                } \n                break;\n            }\n            if (blockColumn + dir < 1 || blockColumn + dir > 4) { break; }\n            blockColumn += dir;\n        }\n    } else if (path == \"vertical\") {\n        while (blockRow >= 1 && blockRow <= 4) {\n            const newSpot = `.pos-${blockRow + dir}-${blockColumn}`;\n            if (document.querySelectorAll(newSpot).length > 0) {\n                if (document.querySelector(newSpot).textContent === block.textContent &&\n                    !document.querySelector(newSpot).classList.contains('merged')) {\n                    document.querySelector(newSpot).classList.add('merged');\n                    block.classList.add('merged');\n                    blockRow += dir;\n                    placeMergedTile(blockRow, blockColumn, Number(block.textContent) * 2);\n                }\n                break;\n            }\n            if (blockRow + dir < 1 || blockRow + dir > 4) { break; }\n            blockRow += dir;\n        }\n    }\n    const newPosition = `pos-${blockRow}-${blockColumn}`;\n    if (blockPos != newPosition) {\n        moved = true;\n    }\n    block.classList.remove(blockPos);\n    block.classList.add(newPosition);\n}\n\nfunction moveBlocks(code) {\n    moved = false;\n    let tiles = document.querySelectorAll('.tile');\n    tiles = Array.from(tiles);\n    tiles = tiles.sort((a, b) => {\n        return a.classList[1]> b.classList[1] ? 1 : -1;\n    });\n    switch (code) {\n        case \"ArrowRight\":\n            //console.log(\"right\");\n            tiles.reverse().forEach((tile) => {moveBlock(tile, \"horizontial\", 1);});\n            break;\n        case \"ArrowLeft\":\n            //console.log(\"left\");\n            tiles.forEach((tile) => {moveBlock(tile, \"horizontial\", -1);});\n            break;\n        case \"ArrowUp\":\n            //console.log(\"up\");\n            tiles.forEach((tile) => {moveBlock(tile, \"vertical\", -1);});\n            break;\n        case \"ArrowDown\":\n            //console.log(\"down\");\n            (tiles.reverse()).forEach((tile) => {moveBlock(tile, \"vertical\", 1);});\n            break;\n        default: \n        //console.log(\"Not an option lol.\");\n    }\n}\n\nfunction clearMerged() {\n    const merged = document.querySelectorAll('.merged');\n    merged.forEach((m) => tileContainer.removeChild(m));\n}\n\nfunction checkGameOver() {\n    let tiles = document.querySelectorAll('.tile');\n    tiles = Array.from(tiles);\n    tiles = tiles.sort((a, b) => {\n        return a.classList[1]> b.classList[1] ? 1 : -1;\n    });\n    if (tiles.length == 16) {\n        for (let i = 0; i <= 12; i += 4) {\n            for (let j = 0; j <= 2; j++) {\n                if (tiles[j + i].firstChild.textContent == tiles[j + i + 1].firstChild.textContent) {\n                    gameOver = false;\n                    return false;\n                }\n            }\n        }\n        for (let i = 0; i <= 8; i += 4) {\n            for (let j = 0; j <= 3; j++) {\n                if (tiles[j + i].firstChild.textContent == tiles[j + i + 4].firstChild.textContent) {\n                    gameOver = false;\n                    return false;\n                }\n            }\n        }\n        loseMessage.classList.add('fade-in-animation');\n        return true;\n    }\n    return false;\n}\n\nfunction reset() {\n    const tiles = document.querySelectorAll('.tile');\n    tiles.forEach((tile) => {tileContainer.removeChild(tile)});\n    score = 0;\n    moves = 0;\n    gameOver = false;\n    scoreBoard.textContent = `Score: 0`;\n    moveBoard.textContent = `Moves Made: 0`;\n    const messages = document.querySelectorAll('.fade-in-animation');\n    if (messages.length > 0) {\n        messages.forEach((message) => message.classList.remove('fade-in-animation'));\n    }\n    placeFirstTiles();\n}\n\nwindow.addEventListener('keydown', (e) => {\n    if (!gameOver) {\n        clearMerged();\n        if (!checkGameOver()) {\n            moveBlocks(e.code);\n            if (moved) {\n                moves += 1;\n                moveBoard.textContent = `Moves Made: ${moves}`;\n                placeNewTile();\n            }\n        }\n    }\n});\n\nwindow.addEventListener(\"keydown\", function(e) {\n    if([\"Space\",\"ArrowUp\",\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\"].indexOf(e.code) > -1) {\n        e.preventDefault();\n    }\n}, false);\n\nwindow.addEventListener('click', () => {\n    winMessage.classList.remove('fade-in-animation');\n})\n\nresetButton.addEventListener('click', reset);\n\nbuildGrid();\nplaceFirstTiles();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}